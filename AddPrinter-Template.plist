<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>autoremove</key>
	<false/>
	<key>catalogs</key>
	<array>
		<string>testing</string>
	</array>
	<key>description</key>
	<string>DESCRIPTION</string>
	<key>display_name</key>
	<string>DISPLAY_NAME</string>
	<key>installcheck_script</key>
	<string>#!/bin/bash

# Check if the IP address exists in the printer list
printer_check=$(/usr/bin/lpstat -s | /usr/bin/grep "ADDRESS")

if [ -z "$printer_check" ]; then
	
	# Not installed
	exit 0

else
	# Installed
	exit 1

fi</string>
	<key>installer_type</key>
	<string>nopkg</string>
	<key>minimum_os_version</key>
	<string>10.7.0</string>
	<key>name</key>
	<string>AddPrinter_DISPLAYNAME</string>
	<key>postinstall_script</key>
	<string>#!/usr/bin/python
import subprocess
import sys

# Populate these options if you want to set specific options for the printer. E.g. duplexing installed, etc.
printerOptions = { OPTIONS }

# Install the printer
cmd = [ '/usr/sbin/lpadmin',
        '-p', 'PRINTERNAME',
        '-L', 'LOCATION',
        '-D', 'DISPLAY_NAME',
        '-v', 'ADDRESS',
        '-P', "DRIVER",
        '-E',
        '-o', 'printer-is-shared=false',
        '-o', 'printer-error-policy=abort-job' ]

for option in printerOptions.keys():
    cmd.append("-o")
    cmd.append(str(option) + "=" +  str(printerOptions[option]))

proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
(lpadminOut, lpadminErr) = proc.communicate()

if lpadminErr:
    print "Error: %s" % lpadminErr
    sys.exit(1)
print "Results: %s" % lpadminOut    
sys.exit(0)</string>
	<key>unattended_install</key>
	<true/>
	<key>uninstall_method</key>
	<string>uninstall_script</string>
	<key>uninstall_script</key>
	<string>#!/bin/bash

printer_name=$(/usr/bin/lpstat -s | /usr/bin/grep -w "ADDRESS" | /usr/bin/sed -n '1 p' | /usr/bin/awk -F " " '{print $3}' | /usr/bin/awk -F ":" '{print $1}')

/usr/sbin/lpadmin -x "$printer_name"</string>
	<key>uninstallable</key>
	<true/>
	<key>version</key>
	<string>VERSION</string>
</dict>
</plist>
